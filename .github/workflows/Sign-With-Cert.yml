name: Manual Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      SolutionPath: RetroPass.sln
      Platform: x64
      Configuration: Release
      BuildMode: SideLoadOnly
      AppxBundle: Never
      ProjectPath: RetroPass\RetroPass.csproj
      ProjectDirectory: .\RetroPass
      PackageOutputRootDir: C:\AppPackage

    steps:
      - uses: microsoft/setup-msbuild@v2

      - uses: NuGet/setup-nuget@v2.0.0

      - run: echo "NUGET_VERSION=latest"

      - uses: actions/checkout@v4.1.1
        with:
          fetch-tags: true
    
      - name: Build and Sign MSIX package
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_CER }}")
          $currentDirectory = Get-Location
          $certificatePath = Join-Path -Path $currentDirectory -ChildPath $env:ProjectDirectory -AdditionalChildPath "certificate.cer"
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
          
          msbuild $env:SolutionPath /p:Platform=$env:Platform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle /p:AppxPackageTestDir="${{ env.PackageOutputRootDir }}\RetroPass_1.10.1.0_x64.msix" /restore
          
          SignTool sign /fd SHA256 /a /f $certificatePath "${{ env.PackageOutputRootDir }}\RetroPass_1.10.1.0_x64.msix"
          
      - run: | 
         $PackagePath = "${{ env.PackageOutputRootDir }}"
         Remove-Item -Recurse -path $PackagePath/Add-AppDevPackage.resources
         Remove-Item -Recurse -path $PackagePath/TelemetryDependencies
         Remove-Item -Recurse -path $PackagePath/Dependencies/arm
         Remove-Item -Recurse -path $PackagePath/Dependencies/arm64
         Remove-Item -Recurse -path $PackagePath/Dependencies/x86
         Remove-Item -path $PackagePath/Add-AppDevPackage.ps1
         Remove-Item -Recurse -path $PackagePath/Install.ps1

      - run: |
         $PackagePath = "${{ env.PackageOutputRootDir }}"
         Compress-Archive -Path $PackagePath\* -DestinationPath "$PackagePath.zip"
         dir "${{ env.PackageOutputRootDir }}"

      - uses: actions/create-release@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         tag_name: v1.0.0  # Example tag name
         release_name: RetroPass_1.10.1.0_x64  
         draft: false
         prerelease: false

      - uses: actions/upload-release-asset@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: ${{ env.PackageOutputRootDir }}\RetroPass_1.10.1.0_x64.msix  
         asset_name: RetroPass_1.10.1.0_x64.msix
         asset_content_type: application/vnd.ms-appx