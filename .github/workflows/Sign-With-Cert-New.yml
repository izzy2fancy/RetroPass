name: Build and Release MSIX Package

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      SolutionPath: RetroPass.sln
      Platform: x64
      Configuration: Release
      BuildMode: SideLoadOnly
      AppxBundle: Never
      ProjectPath: RetroPass\RetroPass.csproj
      ProjectDirectory: .\RetroPass
      PackageOutputRootDir: C:\AppPackage

    steps:
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Set up NuGet
        uses: NuGet/setup-nuget@v2.0.0

      - name: Set NuGet version to latest
        run: echo "NUGET_VERSION=latest"

      - name: Decode certificate and set as property
        run: |
         $cer_content = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_CER }}")
         $cer_path = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "certificate.cer"
         [IO.File]::WriteAllBytes($cer_path, $cer_content)
         # Add the certificate path to the .csproj file
         $csproj_path = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "RetroPass\RetroPass.csproj"
         $csproj_content = Get-Content -Path $csproj_path
         $csproj_content = $csproj_content -replace "<PackageCertificateKeyFile>.*</PackageCertificateKeyFile>", "<PackageCertificateKeyFile>$(ProjectDir)certificate.cer</PackageCertificateKeyFile>"
         Set-Content -Path $csproj_path -Value $csproj_content
    
      - name: Checkout code
        uses: actions/checkout@v4.1.1
    
      - name: Build project
        run: |
          msbuild $env:SolutionPath /p:Platform=$env:Platform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle /p:AppxPackageTestDir="${{ env.PackageOutputRootDir }}\RetroPass_1.10.1.0_x64.msix" /restore
      
      - name: Remove unnecessary files
        run: | 
          $PackagePath = "${{ env.PackageOutputRootDir }}"
          Remove-Item -Recurse -path $PackagePath/Add-AppDevPackage.resources
          Remove-Item -Recurse -path $PackagePath/TelemetryDependencies
          Remove-Item -Recurse -path $PackagePath/Dependencies/arm
          Remove-Item -Recurse -path $PackagePath/Dependencies/arm64
          Remove-Item -Recurse -path $PackagePath/Dependencies/x86
          Remove-Item -path $PackagePath/Add-AppDevPackage.ps1
          Remove-Item -Recurse -path $PackagePath/Install.ps1
         
      - name: Archive package
        run: |
          $PackagePath = "${{ env.PackageOutputRootDir }}"
          Compress-Archive -Path $PackagePath\* -DestinationPath "$PackagePath.zip"
          dir "${{ env.PackageOutputRootDir }}"
         
      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         tag_name: v1.0.0  # Example tag name
         release_name: RetroPass_1.10.1.0_x64  
         draft: false
         prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: ${{ env.PackageOutputRootDir }}\RetroPass_1.10.1.0_x64.msix  
         asset_name: RetroPass_1.10.1.0_x64.msix
         asset_content_type: application/vnd.ms-appx
