on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    env:
      SolutionPath: RetroPass.sln
      Platform: x64
      Configuration: Release
      BuildMode: SideLoadOnly
      AppxBundle: Never
      SigningCertificate: RetroPassKey.pfx
      ProjectPath: RetroPass\RetroPass.csproj
      ProjectDirectory: .\RetroPass
      PackageOutputRootDir: C:\AppPackage
      PackageOutputDir: RetroPass
      PackageOutputBaseName: RetroPass

    steps:
      - uses: microsoft/setup-msbuild@v2

      - uses: NuGet/setup-nuget@v2.0.0

      - run: echo "NUGET_VERSION=latest"

      - uses: actions/checkout@v4.1.1
        with:
          fetch-tags: true

      - id: getPackageName
        run: |
          TAG="${{ github.ref }}"  # Remove double quotes
          TAG="${TAG#refs/tags/}"  # Remove the prefix
          echo "Tag name from GITHUB_REF: $TAG"
          TAG="RetroPass-$TAG"  # Modify the TAG variable here
          echo "TAG=$TAG" >> $GITHUB_ENV
          
      - run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
          $currentDirectory = Get-Location
          $certificatePath = Join-Path -Path $currentDirectory -ChildPath $env:ProjectDirectory -AdditionalChildPath $env:SigningCertificate
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      - run: msbuild $env:SolutionPath /p:Platform=$env:Platform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle /p:PackageCertificateKeyFile=$env:SigningCertificate /p:PackageCertificatePassword=${{ secrets.PFX_KEY_PASSWORD }} /p:AppxPackageTestDir="${{ env.PackageOutputRootDir }}\${{ env.TAG }}\" /restore

      - run: Remove-Item -path $env:ProjectDirectory/$env:SigningCertificate

      - run: | 
         $PackagePath = "${{ env.PackageOutputRootDir }}\${{ env.TAG }}"
         Remove-Item -Recurse -path $PackagePath/Add-AppDevPackage.resources
         Remove-Item -Recurse -path $PackagePath/TelemetryDependencies
         Remove-Item -Recurse -path $PackagePath/Dependencies/arm
         Remove-Item -Recurse -path $PackagePath/Dependencies/arm64
         Remove-Item -Recurse -path $PackagePath/Dependencies/x86
         Remove-Item -path $PackagePath/Add-AppDevPackage.ps1
         Remove-Item -Recurse -path $PackagePath/Install.ps1

      - run: |
         $PackagePath = "${{ env.PackageOutputRootDir }}\${{ env.TAG }}"
         Compress-Archive -Path $PackagePath\* -DestinationPath "$PackagePath.zip"
         dir "${{ env.PackageOutputRootDir }}"

      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name:  ${{ env.TAG }}
          draft: false
          prerelease: false

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PackageOutputRootDir }}\${{ env.TAG }}.zip
          asset_name: ${{ env.TAG }}.zip
          asset_content_type: application/zip
          
